#!/bin/bash
# g_typedef -- generate type definition of runtime.g

goexec=	# set by main driver to current go compiler
gover=	# go<maj>.<min> version (without .patch)
gomaj=	# go<maj>
gomin=	# <min>
govern=	# e.g. 109 for go1.9

# goset <goexec> - set <goexec> as current go
goset() {
	goexec=$1
	# go1.1 go1.2 go1.3 go1.4 go1.5 go1.6 go1.7 go1.8 go1.9 go1.10 -> go1.10
	gover=`$goexec list -f '{{ range context.ReleaseTags }} {{ .}}{{end}}' runtime |awk '{print $NF}'`
	IFS=. read gomaj gomin < <(echo "$gover")
	govern=$((${gomaj#go} * 100 + $gomin))
}

# typedef <type> - print type definition
typedef() {
	$goexec doc -c -u $1 |sed -n -e '/^type /,/^}/p'
}


# typedef_g 	- print <g> & friends definitions
typedef_g() {
	typedef runtime.g
	typedef runtime.stack
	typedef runtime._panic
	typedef runtime._defer
	typedef runtime.gobuf
	typedef runtime.funcval
	#typedef runtime.sudog
	#typedef runtime.hchan
	typedef runtime.timer
	#typedef runtime.guintptr
	#typedef runtime.m

	if (( $govern < 109 )); then
		typedef runtime.stkbar
	fi
}

# typedef_g_fixed - print adjusted <g> & friends definitions
typedef_g_fixed() {
	typedef_g $1 | \
		sed -e 's/\<sys.Uintreg\>/uintreg/'

	echo "type guintptr uintptr	// XXX stub"
	echo "type puintptr uintptr	// XXX stub"
	echo "type uintreg  uint	// FIXME wrong on amd64p32"
	echo "type m struct {}		// FIXME stub"
	echo "type sudog struct {}	// FIXME stub"
}


# gen_zruntime	- generate zruntime_g_<gover>.go
gen_zruntime() {
	out="zruntime_g_$gover.go"
	echo  >$out "// Code generated by g_typedef; DO NOT EDIT."
	echo >>$out
	echo >>$out "// +build $gover,!$gomaj.$((gomin+1))"
	echo >>$out
	echo >>$out "package xruntime"
	echo >>$out
	echo >>$out 'import "unsafe"'
	echo >>$out
	typedef_g_fixed $go >>$out
}


# main driver
gov="go18 go"

for g in $gov; do
	goset $g
	gen_zruntime
done
