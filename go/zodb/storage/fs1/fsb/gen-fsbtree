#!/bin/bash -e
# generate b.Tree with compile-time KEY=zodb.Oid, VALUE=int64, tuned kd and direct oidCmp calls

KEY=zodb.Oid
VALUE=int64

# adjust kd so that sizeof(d) ~= page
de=16	# KEY+VALUE
o=24	# d.c, d.n, d.p
kd=$(( (4096 - $o - $de) / (2 * $de) ))

b=github.com/cznic/b
Bdir=`go list -f '{{.Dir}}' $b`
Brev=`cd $Bdir && git describe --always`
out=fsbtree.go

echo "// Code generated by gen-fsbtree from $b $Brev; DO NOT EDIT." >$out
echo "// KEY=$KEY  VALUE=$VALUE" >>$out
echo "// ---- 8< ----" >>$out
echo >>$out
make -s -C $Bdir generic |sed	\
	-e '/package b/a \\nimport "lab.nexedi.com/kirr/neo/go/zodb"'	\
	-e 's/package b/package fsb/g'	\
	-e "s/KEY/$KEY/g"	\
	-e "s/VALUE/$VALUE/g"	\
 \
	-e "s/^\(\\s*kd = \).*\$/\\1$kd/g"	\
 \
	-e '/cmp *Cmp$/d'	\
	-e 's/t\.cmp(/oidCmp(/g'	\
	-e 's/func TreeNew(cmp Cmp)/func TreeNew()/g'	\
	-e 's/btTPool.get(cmp)/btTPool.get()/g'	\
	-e 's/func (p \*btTpool) get(cmp Cmp)/func (p *btTpool) get()/g'	\
	-e '/x\.cmp = cmp$/d'	\
	>>$out

# also extract dump() routine
out=fsbtree_util.go
echo "// DO NOT EDIT - AUTOGENERATED (by gen-fsbtree from $b $Brev)" >$out
echo "// ---- 8< ----" >>$out
cat >>$out <<EOF
package fsb
import (
	"bytes"
	"github.com/cznic/strutil"	// XXX better to not depend on it
)
EOF
echo >>$out
sed -n	\
	-e '/^func isNil(/,/^}/p'	\
	-e '/^func.* dump()/,/^}/ {
		s/dump()/Dump()/g
		s/v\.k != nil/v.k != 0/g
		s/v\.v != nil/v.v != 0/g
		p
	}'	\
 \
	$Bdir/all_test.go	\
	>>$out
